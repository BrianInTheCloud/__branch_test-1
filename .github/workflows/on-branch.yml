defaults:
  run:
    shell: bash

on:
  create # does not support filtering by type (branch), must do later

jobs:
  create-branch:
    if: github.ref_type == 'branch' # create can be branches or tags; we want only branches
    runs-on: ubuntu-latest

    steps:

    # - name: Check out everything from main
    #   uses: actions/checkout@v4
    #   with:
    #     fetch-depth: 0
    #     path: source

    - name: Create New Repo for Branch
      id: new-repo
      run: |
        sanitized_branch=$(echo '${{ github.ref_name }}' | sed -e "s/[^a-zA-Z0-9._-]/-/g")
        new_repo_name="__branch_$sanitized_branch"
        gh repo create $new_repo_name --public
        gh secret --repo ${{ github.repository_owner }}/$new_repo_name set CROSS_REPO_GITHUB_TOKEN --body "${{ secrets.CROSS_REPO_GITHUB_TOKEN }}"
        gh variable --repo ${{ github.repository_owner }}/$new_repo_name set SOURCE_REPO --body "${{ github.event.repository.name }}"
        gh variable --repo ${{ github.repository_owner }}/$new_repo_name set SOURCE_BRANCH --body "${{ github.ref_name }}"
        echo "repo_name=$new_repo_name" >> $GITHUB_OUTPUT
      env:
        GH_TOKEN: ${{ secrets.CROSS_REPO_GITHUB_TOKEN }}

    - name: Copy Site Into New Repo
      run: |
        git config user.username ${{ github.repository_owner }}
        git config user.password ${{ secrets.CROSS_REPO_GITHUB_TOKEN }}
        git clone --bare https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}
        cd ${{ github.event.repository.name }}.git
        git push --mirror https://github.com/${{ github.repository_owner }}/${{ steps.new-repo.outputs.repo_name }}
